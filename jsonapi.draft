const fs = require('fs');
const jsonServer = require("json-server");
const router = jsonServer.router('db.json')
const parsedData = require('./scrap')
const {staticApiUri, apiCollection} = require("./utils");

// Static json-api

const jsonApiDir = './public/json-api'

const data = [{
    id: 'days',
    collection: 'days',
}, {
    id: 'i18n',
    collection: 'i18n',
}];

data.forEach(({collection, id}) => {

    const collectionData = router.db.get(id).value()
    const collectionIndex = () => {
        return collectionData.map((item) => {

            fs.writeFile(`${jsonApiDir}/${collection}/${item.id}.json`, JSON.stringify(item), (err) => {
                if (err) throw err;
                console.log(`json-api.js > ${collection}/${item.id}.json`, item);
            });

            return {
                id: item.id,
                uri: staticApiUri(`${collection}/${item.id}`),
            }
        })
    }

    fs.writeFile(`${jsonApiDir}/${collection}.json`, JSON.stringify(collectionIndex()), (err) => {
        if (err) throw err;
        console.log(`json-api.js > ${collection}.json, writing ${collectionIndex().length} items to index`);
    });
})

fs.writeFile(`${jsonApiDir}/api.json`, JSON.stringify(apiCollection), (err) => {
    if (err) throw err;
    console.log(`json-api.js > api.json, writing paths`);
});

// today directive

fs.writeFile(`${jsonApiDir}/today.json`, JSON.stringify(parsedData), (err) => {
    if (err) throw err;
    console.log(`json-api.js > today.json, writing paths`);
});